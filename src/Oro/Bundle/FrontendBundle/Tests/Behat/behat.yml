oro_behat_extension:
  suites:
    OroFrontendBundle:
      contexts:
        - Oro\Bundle\TestFrameworkBundle\Tests\Behat\Context\OroMainContext
        - Oro\Bundle\ConfigBundle\Tests\Behat\Context\FeatureContext
        - Oro\Bundle\FormBundle\Tests\Behat\Context\FormContext
        - Oro\Bundle\ApplicationBundle\Tests\Behat\Context\CommerceMainContext
        - Oro\Bundle\FormBundle\Tests\Behat\Context\FeatureContext
        - Oro\Bundle\UserBundle\Tests\Behat\Context\FeatureContext
        - Oro\Bundle\DataGridBundle\Tests\Behat\Context\GridContext
        - Oro\Bundle\CustomerBundle\Tests\Behat\Context\CustomerUserContext
        - Oro\Bundle\CustomerBundle\Tests\Behat\Context\ACLContext
        - Oro\Bundle\CustomerBundle\Tests\Behat\Context\FrontendGridContext
        - Oro\Bundle\CustomerBundle\Tests\Behat\Context\RegistrationInstructionFeatureContext
        - Oro\Bundle\CustomerBundle\Tests\Behat\Context\CustomerVisitorContext
        - Oro\Bundle\FrontendBundle\Tests\Behat\Context\CssVariablesContext
      paths:
        - '@OroFrontendBundle/Tests/Behat/Features'
  elements:
    FrontendMainMenu:
      selector: '.main-menu-outer'
      class: Oro\Bundle\FrontendBundle\Tests\Behat\Element\FrontendMainMenu
    FrontendMainMenuDropdown:
      selector: '[data-main-menu-item]'
    Node1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1")]/..'
    Node2:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-2")]/..'
    All Node_1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//a[contains(text(),"All Node-1")]'
    Node1_1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-1")]/..'
    All Node1_1_Title:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//a[contains(text(),"All Node-1-1")]'
    Node1_1_Title:
      selector:
        type: 'xpath'
        locator: '//a[contains(@class,"mega-menu-depth-1__title-inner")][contains(text(),"Node-1-1")]'
    Node1_1Active:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-1")]/ancestor::*[@data-main-menu-item="2"][contains(@class, "show")]'
    Node1_2:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-2")]/..'
    Node1_3:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-3")]/..'
    Node1_3Active:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-3")]/ancestor::*[@data-main-menu-item="2"][contains(@class, "show")]'
    Node1_1_1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-1-1")]/..'
    Node1_1_1_1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node-1-1-1-1")]/..'
    CloseActiveItem:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item="2"][contains(@class, "show")]//button[@data-role="close"]'
    NodeWithLongName:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"Node with loooooooooooooooooooooooooooooooong name")]/ancestor::*[@data-main-menu-item="2"]'
    OnSaleImage:
      selector:
        type: xpath
        locator: '//div[contains(@class, "mega-menu-depth-2__featured-list")]//img[@alt="On Sale"]'
    OnSaleItem_level_1:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"On Sale")]/ancestor::*[@data-main-menu-item="1"]'
    OnSaleItem_level_2:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"On Sale")]/ancestor::*[@data-main-menu-item="2"]'
    OnSaleItem_level_3:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"On Sale")]/ancestor::*[@data-main-menu-item="3"]'
    OnSaleItem_level_4:
      selector:
        type: 'xpath'
        locator: '//*[@data-main-menu-item]//span[contains(text(),"On Sale")]/ancestor::*[@data-main-menu-item="4"]'
    Frontend Grid:
      selector: 'div.oro-datagrid'
      class: Oro\Bundle\FrontendBundle\Tests\Behat\Element\Grid
    FrontendGridRow:
      selector: '.grid-row'
      class: Oro\Bundle\FrontendBundle\Tests\Behat\Element\GridRow
    FrontendGridToolbarPaginator:
      selector: '.visible-items-counter'
      class: Oro\Bundle\FrontendBundle\Tests\Behat\Element\GridToolbarPaginator
    FrontendMassActionHeadCheckbox:
      selector: 'th.select-all-header-cell button'
    Frontend Pagination:
      selector: '.oro-pagination__pager'
    Frontend List Pagination:
      selector: '.oro-pagination__pager--stepper'
    FrontendGridNextPageButton:
      selector: '.oro-pagination [data-grid-pagination-direction="next"]'
    FrontendGridPrevPageButton:
      selector: '.oro-pagination [data-grid-pagination-direction="prev"]'
    FrontendGridTopToolbar:
      selector: '[data-grid-toolbar="top"]'
    FrontendGridBottomToolbar:
      selector: '[data-grid-toolbar="bottom"]'
    FrontendGridActionRefreshButton:
      selector: '.refresh-action'
    FrontendGridActionResetButton:
      selector: '.reset-action'
    Frontend Grid Action Filter Button:
      selector: '.action[title="Filter Toggle"]'
    DetachedSelect2Result:
      selector: '#select2-drop-mask + .select2-drop .select2-results'
    Active Sticky Panel:
      selector: ".sticky.sticky--top.in-sticky"
    Bottom Active Sticky Panel:
      selector: ".sticky.sticky--bottom.in-sticky"
    Bottom Not Active Sticky Panel:
      selector: ".sticky.sticky--bottom"
    Main Menu Into Header:
      selector: ".page-header .header-row"
    Main Menu Into Sticky Panel:
      selector: ".sticky.sticky--top .header-row"
    Product Filter Into Sticky Panel:
      selector: ".sticky.sticky--top.in-sticky .filter-box"
    Product Filter Into Page Content:
      selector: ".page-content .filter-box"
    Grid Filters Button Into Sticky Panel:
      selector: ".sticky.sticky--top.in-sticky .action[title=\"Filter Toggle\"]"
    Header:
      selector: ".page-header"
    Copyright:
      selector: ".copyright"
    Fullscreen Popup:
      selector: ".fullscreen-popup"
    Fullscreen Popup Header:
      selector: '.fullscreen-popup [data-role="header"]'
    Fullscreen Popup Footer:
      selector: '.fullscreen-popup [data-role="footer"]'
    Popup Gallery Widget:
      selector: ".popup-gallery-widget"
    Popup Gallery Widget Image:
      selector:
        type: 'xpath'
        locator: '//div[contains(@class,"popup-gallery-widget")]//img'
    Popup Gallery Widget Picture:
      selector: ".popup-gallery-widget picture"
    Popover Image:
      selector: "div.popover img"
    Popup Gallery Widget Close:
      selector: ".popup-gallery-widget button.close-dialog"
    Fullscreen Popup Apply Filters:
      selector: '.fullscreen-popup button[data-role="apply"]'
    Filter Settings Form:
      selector: 'form[name="theme"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Use Default: 'theme[oro_frontend___filter_value_selectors][use_parent_scope_value]'
          Value Selectors: 'theme[oro_frontend___filter_value_selectors][value]'
    By Step:
      selector:
        locator: '//button[contains(@class, "filter-criteria-selector")]/span[contains(text(),"Step")]/..'
        type: 'xpath'
    By Name:
      selector:
        locator: '//button[contains(@class, "filter-criteria-selector")]/span[contains(text(),"Name")]/..'
        type: 'xpath'
    First Name:
      selector:
        locator: '//button[contains(@class, "filter-criteria-selector")]/span[contains(text(),"First Name")]/..'
        type: 'xpath'
    Last Name:
      selector:
        locator: '//button[contains(@class, "filter-criteria-selector")]/span[contains(text(),"Last Name")]/..'
        type: 'xpath'
    Enabled:
      selector:
        locator: '//button[contains(@class, "filter-criteria-selector")]/span[contains(text(), "Enabled")]/..'
        type: 'xpath'
    Opened Filter Dropdown:
      selector: '.filter-criteria.dropdown-menu.criteria-visible'
    Filter Checkboxes:
      selector: ".datagrid-manager .filter-default .ui-multiselect-checkboxes .datagrid-manager__list-item"
    Filter Checkboxes All At Once:
      selector: ".datagrid-manager .ui-multiselect-checkboxes .filters-dropdown__items"
    Filters Dropdown:
      selector: '[id^="grid-frontend-requests-grid"] a.action[title="Filter Toggle"]'
    Requests For Quote Grid:
      selector: '[id^="grid-frontend-requests-grid"]'
      class: Oro\Bundle\FrontendBundle\Tests\Behat\Element\Grid
    Second Save Button:
      selector:
        type: xpath
        # when should be clicked second button on the page, because it visible after changes on page
        locator: '(//div[@data-bottom-actions]/button[contains(text(), "Save") or contains(text(), "Create")])'
    Catalog Switcher:
      selector: '.oro-datagrid .catalog-switcher'
    Catalog Switcher Toggle:
      selector: '.catalog-switcher > .dropdown-toggle'
    Sticky Filters Dropdown:
      selector: '.sticky.sticky-top a.action[title="Filter Toggle"]'
    Mass Actions Into Sticky Panel:
      selector: '.sticky.sticky--top.in-sticky [data-mass-actions-container]'
    Pagination Bottom Panel:
      selector: '.datagrid-toolbar-bottom [data-grid-pagesize]'
    Pegination Into Sticky Panel:
      selector: '.sticky.sticky--top.in-sticky [data-grid-pagesize]'
    Sorting Into Sticky Panel:
      selector: '.sticky.sticky--top.in-sticky [data-grid-sorting]'
    Catalog Switcher Into Sticky Panel:
      selector: '.sticky.sticky--top.in-sticky .toggle-container'
    Sidebar Main Menu Popup:
      selector: '.sidebar-main-menu'
    TopRightBar:
      selector: '.topbar__right'
    MiddleLeftSide:
      selector: '.middlebar__left'
    MiddleBarMenus:
      selector: '.middlebar__menus'
    CustomerMenu:
      selector: '.customer-menu'
    PageStandaloneMenuContainer:
      selector: '.page-header__inner--standalone-menu'
    StandaloneMenu:
      selector: '.main-menu-standalone-mode'
    Theme Configuration Form:
      selector: 'form[name="theme_configuration"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Quick Access Button Label: 'theme_configuration[configuration][header__quick_access_button][label][default]'
          Quick Access Button Type: 'theme_configuration[configuration][header__quick_access_button][type]'
          Quick Access Button Frontend Menu: 'theme_configuration[configuration][header__quick_access_button][menu]'
          Filter Panel Position on Product Listing Page: 'theme_configuration[configuration][product_listing__filters_position]'
          Page Template: 'theme_configuration[configuration][product_details__template]'
          Primary Main: 'theme_configuration[configuration][color_palette__primary_main][value]'
          Primary Hover: 'theme_configuration[configuration][color_palette__primary_hover][value]'
          Default Font Size: 'theme_configuration[configuration][page_styles__base_font_size][value]'
          Default Line Height: 'theme_configuration[configuration][page_styles__base_line_height][value]'
          Footer Background: 'theme_configuration[configuration][page_styles__footer_background][value]'
          Btn Min Height: 'theme_configuration[configuration][button_styles__btn_min_height][value]'
          Btn Border Width: 'theme_configuration[configuration][button_styles__btn_border_width][value]'
          Btn Padding: 'theme_configuration[configuration][button_styles__btn_padding][value]'
          Btn Gap: 'theme_configuration[configuration][button_styles__btn_gap][value]'
          Btn Border Radius: 'theme_configuration[configuration][button_styles__btn_border_radius][value]'
          Btn Neutral Dark Focus Box Shadow: 'theme_configuration[configuration][button_styles__btn_neutral_dark_focus_box_shadow][value]'
          Btn Neutral Dark Focus Outline: 'theme_configuration[configuration][button_styles__btn_neutral_dark_focus_outline][value]'
          Quantity Inputs in Shopping List: 'theme_configuration[configuration][shopping_list__quantity_inputs]'
    Primary Main Color:
      selector: 'form[name="theme_configuration"] input[name="theme_configuration[configuration][color_palette__primary_main][value]"]'
    Theme Configuration Config:
      selector: 'form[name="theme"]'
      class: Oro\Bundle\TestFrameworkBundle\Behat\Element\Form
      options:
        mapping:
          Image: 'theme[oro_theme___theme_configuration][value]'
    Filter Hint Items Toggle:
      selector: 'div.filter-criteria-hint-item-toggle'
    Visible Filter Clean:
      selector: '.open-filter button.filter-clear, .filter-default[tabindex="-1"] button.filter-clear'
