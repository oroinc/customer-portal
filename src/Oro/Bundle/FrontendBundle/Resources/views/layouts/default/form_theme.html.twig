{% extends '@OroForm/layouts/default/form_theme.html.twig' %}

{%- block form_label -%}
    {% set label_attr = layout_attr_defaults(label_attr, {
        '~class': ' label label--full'
    }) %}

    {{ parent() }}
{%- endblock form_label -%}

{% block form_widget_simple %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' input input--full'
    }) %}
    {% set type = type|default('text') %}
    {# Attr "placeholder" is allowed only for next types #}
    {% if attr.placeholder is defined and type not in ['email', 'number', 'password', 'search', 'tel', 'text', 'url'] %}
        {% set attr = layout_attr_defaults(attr, {
            'data-placeholder': translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans(attr_translation_parameters, translation_domain)
        }) %}
        {% set attr = attr|filter((v, k) => k != 'placeholder') %}
    {% endif %}
    {# Attr "required" is allowed only for next types #}
    {% if required is defined and type not in ['text', 'search', 'url', 'tel', 'email', 'password', 'date', 'month', 'week', 'time', 'datetime-local', 'number', 'checkbox', 'radio', 'file'] %}
        {% set required = null %}
    {% endif %}
    {{ parent() }}
{% endblock %}

{% block textarea_widget %}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' textarea textarea--full'
    }) %}

    {{ parent() }}
{% endblock %}

{%- block form_row -%}
    {% set attr = layout_attr_defaults(attr, {
        '~class': " form-field-" ~ form.vars.name,
        placeholder: label|default('')
    }) %}

    {% set parentClass = parentClass|default('') %}
    {% set class_prefix = form.vars.class_prefix|default(class_prefix|default('')) %}
    {% set row_attr = layout_attr_defaults(row_attr|default({}), {
        '~class': [' form-row', parentClass, class_prefix]|join(' ')
    }) %}

    {% set widget_attr = attr %}
    {% set attr = row_attr %}

    <div {{ block('attributes') }}>
        {{- form_label(form, null) -}}
        {{- form_widget(form, {attr: widget_attr}) -}}
        {{- form_errors(form) -}}
    </div>
{%- endblock form_row -%}

{% block widget_attributes %}
    {% if errors|length > 0 %}
        {% set attr = layout_attr_defaults(attr, {
            '~class': ' error'
        }) %}
    {% endif %}

    {{ parent() }}
{% endblock widget_attributes %}

{%- block form_errors -%}
    {%- for error in errors -%}
        {#validation markup should be the same as in frontend validator#}
        <span class="validation-failed" role="alert">
            <span class="validation-failed__icon" aria-hidden="true"></span>
            <span>{{ error.message|trans }}</span>
        </span>
    {%- endfor -%}
{%- endblock form_errors -%}

{%- block choice_widget_expanded -%}
    {% set attr = layout_attr_defaults(attr, {
        '~class': ' input-widget-select'
    }) %}
    <div {{ block('widget_container_attributes') }}>
        {%- for child in form %}
            {{- form_widget(child) -}}
        {% endfor -%}
    </div>
{%- endblock choice_widget_expanded -%}

{%- block choice_widget_collapsed %}
    {% if attr.placeholder is defined  %}
        {% set attr = layout_attr_defaults(attr, {
            'data-placeholder': translation_domain is same as(false) ? attr.placeholder : attr.placeholder|trans(attr_translation_parameters, translation_domain)
        }) %}
        {# "placeholder" is not allowed on the "select" element #}
        {% set attr = attr|filter((v, k) => k != 'placeholder') %}
    {% endif %}

    {{ parent() }}
{% endblock %}

{% block checkbox_row %}
    {{- form_widget(form) -}}
    {{- form_errors(form) -}}
{% endblock %}

{%- block checkbox_widget -%}
    {%- if label is empty -%}
        {% set label = id|humanize %}
    {%- endif -%}

    <label for="{{ id }}" class="checkbox-label">
        {{- parent() -}}
        {{- label|block_text(translation_domain) -}}
    </label>
{%- endblock checkbox_widget -%}

{%- block radio_widget -%}
    {% set class_prefix = form.vars.class_prefix|default(class_prefix|default('radio')) %}

    {% set label_attr = layout_attr_defaults(label_attr, {
        '~class': ' checkbox-label',
        'data-radio': true,
        'for': id
    }) %}

    {% if form.vars.checked %}
        {% set label_attr = layout_attr_defaults(label_attr, {
            '~class': ' checked'
        }) %}
    {% endif %}

    {%- if label is empty -%}
        {% set label = id|humanize %}
    {%- endif -%}

    {% set widget_attr = attr %}
    {% set attr = label_attr %}
    <label {{ block('attributes') }}>
        {% set attr = widget_attr %}
        {{- parent() -}}
        {{- label|block_text(translation_domain) -}}
    </label>
    {{- form_errors(form, {'class_prefix': class_prefix}) -}}
{%- endblock radio_widget -%}

{%- block oro_date_widget -%}
        {% if attribute(attr, 'data-validation') is defined %}
            {% set dateValidation = attr['data-validation'] %}
        {% else %}
            {% set dateValidation = {'Date' : {}} %}

            {% if required %}
                {% set dateValidation = dateValidation|merge({'NotBlank' : {'message': 'This value should not be blank.'}}) %}
            {% endif %}

            {% set dateValidation = dateValidation|json_encode %}
        {% endif %}

        {% set options = {
            component: 'oroui/js/app/components/view-component',
            view: 'oroui/js/app/views/datepicker/datepicker-view',
            nativeMode: isMobileVersion(),
            dateInputAttrs: {
                placeholder: 'oro.form.choose_date'|trans,
                id: id,
                name: id,
                'data-validation': dateValidation,
                class: 'datepicker-input ' ~ (attribute(attr, 'class') is defined ? attr['class'] : ''),
                'aria-live': 'assertive',
                autocomplete: 'off'
            },
            datePickerOptions: {
                altFormat: 'yy-mm-dd',
                changeMonth: false,
                selectMonthClassName: 'select',
                changeYear: false,
                selectYearClassName: 'select',
                yearRange: years|default('-80:+1'),
                showButtonPanel: true,
                maxDate: (attribute(datePickerOptions, 'maxDate') is defined ? datePickerOptions['maxDate'] : maxDate),
                minDate: (attribute(datePickerOptions, 'minDate') is defined ? datePickerOptions['minDate'] : minDate)
            }
        } %}
        {% set id = 'hidden_' ~ id %}
        {% set attr = attr|merge({
            'data-page-component-module': 'oroui/js/app/components/viewport-component',
            'data-page-component-options': options|json_encode(constant('JSON_FORCE_OBJECT'))
        }) %}

        {{ block('date_widget') }}
{%- endblock oro_date_widget -%}

{% block oro_frontend_region_widget %}
    {{ block('oro_region_widget') }}
{% endblock %}

{% block oro_frontend_country_widget %}
    {{ form_widget(form, {'class_prefix': 'checkout'}) }}
{% endblock %}

{% block oro_image_widget %}
    <div class="uploader-container">{{ form_widget(form.file) }}</div>
{% endblock %}
