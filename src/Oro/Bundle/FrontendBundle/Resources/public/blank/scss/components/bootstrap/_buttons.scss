/* @theme: blank; */

.btn {
    display: $btn-display;
    font-family: $btn-font-family;
    font-weight: $btn-font-weight;
    text-align: $btn-text-align;
    white-space: $btn-white-space;
    vertical-align: $btn-vertical-align;
    user-select: $btn-user-select;
    border: $btn-border;
    text-decoration: $btn-text-decoration;

    @include appearance();

    @if ($btn-theme) {
        @include button-custom-variant($btn-theme...);
    }

    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
    @include transition($btn-transition);

    // Share hover and focus styles
    @include hover-focus {
        text-decoration: $btn-hover-focus-text-decoration;
    }

    &:focus,
    &.focus {
        outline: $btn-hover-focus-outline;
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
        opacity: $btn-disabled-opacity;

        @include box-shadow($btn-disabled-box-shadow);
    }

    // Opinionated: add "hand" cursor to non-disabled .btn elements
    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background-image: none;

        @include box-shadow($btn-active-box-shadow);

        &:focus {
            @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
        }
    }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset:disabled a.btn {
    pointer-events: none;
}

//
// Alternate buttons
//

@each $color, $values in $btn-theme-keys {
    .btn--#{$color} {
        @include button-custom-variant($values...);
    }
}

//
// Link buttons
//

// Make a button look and behave like a link
.btn--link {
    font-weight: $btn-link-font-weight;
    color: $btn-link-color;
    background-color: $btn-link-background-color;
    border-color: $btn-link-border-color;

    @include hover {
        color: $btn-link-hover-color;
        text-decoration: $btn-link-hover-text-decoration;
        background-color: $btn-link-hover-background-color;
        border-color: $btn-link-hover-border-color;
    }

    &:focus,
    &.focus {
        text-decoration: $btn-link-focus-text-decoration;
        border-color: $btn-link-focus-border-color;
        box-shadow: $btn-link-focus-box-shadow;
    }

    &:active,
    &.active,
    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        background: $btn-link-active-background;
        color: $btn-link-active-color;
        border-color: $btn-link-active-border-color;
        box-shadow: $btn-link-active-box-shadow;
    }

    &:disabled,
    &.disabled {
        color: $btn-link-disabled-color;
        pointer-events: $btn-link-disabled-pointer-events;
    }
}

.btn--plain {
    padding: $btn-plain-inner-offset;
    line-height: $btn-plain-line-height;
    border-color: $btn-plain-border-color;
    background-color: $btn-plain-background-color;
    color: $btn-plain-color;
    cursor: $btn-plain-cursor;

    @include element-state('hover') {
        background-color: $btn-plain-hover-background-color;
        border-color: $btn-plain-hover-border-color;
        color: $btn-plain-hover-color;
    }

    @include element-state('focus') {
        background-color: $btn-plain-focus-background-color;
        border-color: $btn-plain-focus-border-color;
    }

    @include element-state('active') {
        box-shadow: $btn-plain-active-box-shadow;
    }

    &.active,
    &.pressed {
        box-shadow: $btn-plain-pressed-box-shadow;
    }
}

.btn--large {
    min-width: $btn-large-min-width;
}

//
// Button Sizes
//

.btn--size {
    &-xs {
        font-size: $base-font-size--s;
        padding: $btn-padding-y-xs $btn-padding-x-xs;

        @include border-radius($btn-border-radius-xs);
    }

    &-s {
        line-height: $btn-line-height--s;
        padding: $btn-padding-y-s $btn-padding-x-s;

        @include border-radius($btn-border-radius-s);
    }

    &-m {
        font-size: $base-font-size--large;
        padding: $btn-padding-y-m $btn-padding-x-m;

        @include border-radius($btn-border-radius-m);
    }

    &-l {
        font-size: $base-font-size--l;
        padding: $btn-padding-y-l $btn-padding-x-l;

        @include border-radius($btn-border-radius-l);
    }
}

//
// Block button
//

.btn--block {
    display: $btn-block-display;
    width: $btn-block-width;

    // Vertically space out multiple block buttons
    + .btn--block {
        margin-top: $btn-block-offset-top;
    }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.btn--block {
        width: 100%;
    }
}

@include breakpoint('mobile-landscape') {
    .btn {
        &--full-in-mobile {
            width: 100%;
        }
    }
}
