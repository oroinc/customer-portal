/* @theme: default; */

@use 'sass:list';

// Set theme fonts
@include use-font-face($theme-fonts);

// Generate classes for media queries

@if (length($breakpoints) >= 1) {
    // Iterate index;
    $breakpoint-index: 0;

    // List with section keys
    // ('desktop', 'tablet', 'mobile')
    $breakpoint-names: map_keys($breakpoints);

    @each $breakpoint in $breakpoints {
        $breakpoint-index: $breakpoint-index + 1;

        // Iterate section name
        $current-breakpoint-name: nth($breakpoint-names, $breakpoint-index);

        @include breakpoint($current-breakpoint-name) {
            // Create classes:
            // .hide-on-desktop
            // .hide-on-tablet,
            // .hide-on-tablet-small,
            // .hide-on-mobile-landscape,
            // .hide-on-mobile,
            // .hide-on-strict-desktop
            // .hide-on-strict-tablet,
            // .hide-on-strict-tablet-small
            // .hide-on-strict-mobile-landscape,
            // .hide-on-strict-mobile-big
            .hide-on-#{$current-breakpoint-name} {
                // stylelint-disable-next-line declaration-no-important
                display: none !important;
            }
        }
    }

    // Breakpoint global variables
    head::before {
        $content: '';
        $key-index: 0;
        $sep: '|';

        @each $breakpoint, $value in $breakpoints {
            @if ($key-index == 0) {
                $sep: '';
            } @else {
                $sep: '|';
            }

            $content: '#{$content}#{$sep}--breakpoints-#{$breakpoint}:#{$value}';

            $key-index: $key-index + 1;
        }

        content: $content;
        display: none;
    }
}

@if ($use-basic-styles) {
    html {
        font-size: $root-font-size;
        font-family: sans-serif;
        text-size-adjust: 100%;
        -webkit-tap-highlight-color: rgba(0 0 0 / 0%);
    }

    html,
    body {
        min-height: 100%;
    }

    .body {
        width: 100%;
        min-width: $body-min-width;
        margin: 0;

        font: list.slash($base-font-size, $base-line-height) $base-font;

        background-color: $body-bg-color;
        color: $body-color;

        @if ($global-font-smoothing) {
            @include font-smoothing();
        }
    }
}

table {
    border-spacing: 0;
    border-collapse: collapse;
}

button,
input,
optgroup,
select,
textarea {
    color: inherit;
}

:focus {
    outline: none;
}

// Links
a {
    text-decoration: $link-link-normal-text-decoration;

    @include link();

    @include element-state('hover') {
        text-decoration: $link-link-hover-text-decoration;
    }
}
