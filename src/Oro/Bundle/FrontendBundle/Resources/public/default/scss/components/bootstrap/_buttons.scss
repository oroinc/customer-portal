/* @theme: default; */

@use 'sass:map';

.btn {
    &.checked,
    &.active,
    &.pressed {
        box-shadow: $active-box-shadow;

        @if ($active-box-shadow and $btn-focus-visible-style) {
            &.focus-visible {
                box-shadow: $active-box-shadow, $btn-focus-visible-style;
            }
        }
    }

    &.caret {
        &::after {
            content: '';
            display: inline-block;
            width: 0;
            height: 0;
            border-top: 4px solid;
            border-right: 4px solid transparent;
            border-left: 4px solid transparent;
            vertical-align: middle;
        }

        &.offset-start::after {
            margin-left: $font-icon-offset-end;
        }
    }
}

// Behaviour based on realization of @mixin button-custom-variant
.btn--plain {
    &.checked,
    &.active,
    &.pressed {
        &.focus-visible {
            box-shadow: $btn-focus-visible-style;
        }
    }

    &:not(.disabled):active,
    &:not(.disabled).active {
        &.focus-visible {
            box-shadow: $btn-focus-visible-style;
        }
    }
}

// Behaviour based on realization of @mixin button-custom-variant
.btn--default-color {
    color: color-yiq(map.get($btn-theme-default, 'background'));

    &:hover {
        color: color-yiq(map.get($btn-theme-default, 'hover-background'));
    }

    &.disabled,
    &:disabled {
        color: color-yiq(map.get($btn-theme-default, 'background'));
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
        color: color-yiq(darken(map.get($btn-theme-default, 'background'), 8%));
    }
}
