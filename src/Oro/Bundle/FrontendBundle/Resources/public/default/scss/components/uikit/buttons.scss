/* @theme: default; */

@use 'sass:map';
@use 'sass:list';

.btn {
    // Render Theme Styles
    @each $theme-key, $theme-value in $btn-palette {
        @if $theme-key != 'default' {
            &--#{$theme-key} {
                @include render-states($theme-value, $btn-var-prefix, $theme-key);
            }
        }
    }
}

.btn--size {
    // Render Sizes
    @each $size-key, $size-value in $btn-sizes {
        @if $size-key != 'default' {
            &-#{$size-key} {
                @include render-properties($size-value);
            }
        }
    }
}

.btn--flat {
    padding-inline: $btn-flat-padding-inline;

    &:hover {
        &::after {
            content: $btn-flat-hover-after-content;
            background-color: $btn-flat-hover-after-background-color;
            height: $btn-flat-hover-after-height;
            position: $btn-flat-hover-after-position;
            inset: $btn-flat-hover-after-inset;
            border-radius: $btn-flat-hover-after-border-radius;
        }
    }

    &:disabled,
    &.disabled {
        &::after {
            content: $btn-flat-disabled-after-content;
        }
    }
}

.btn--circle {
    border-radius: 50%;

    @include render-properties(map.get($btn-circle-offsets, 'default'));

    @each $size-key, $size-value in $btn-circle-offsets {
        @if $size-key != 'default' {
            &.btn--size-#{$size-key} {
                @include render-properties($size-value);
            }
        }
    }
}

.btn--rounded {
    border-radius: $btn-rounded-border-radius;
}

.btn--no-padding {
    padding-inline: $btn-no-padding-inline;
}

.btn--full,
.btn--block {
    width: 100%;
}

.btn--block {
    display: $btn-block-display;
}
