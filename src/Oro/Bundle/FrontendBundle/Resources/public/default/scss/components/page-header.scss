/* @theme: default; */

.page-header {
    background-color: $page-header-background-color;
    display: flex;
    flex-direction: column;

    z-index: $sticky-panel-z-index + 1;

    --group-offset-y: var(--sticky-page-header-group-offset-y);
    --sticky-position-top-offset: var(--sticky-page-header-offset-top, 0);

    transition: $sticky-panel-transition;

    &.in-sticky {
        z-index: $sticky-panel-z-index + 2;

        &.scrolled-up {
            transform: translateY(0);
        }

        &.scroll-down:not(:has([aria-expanded='true'])) {
            transform: translateY(calc(var(--group-offset-y, 0) * -1));
        }
    }

    &--standalone-main-menu {
        &:not(:has(.page-header__element)) {
            padding-top: $page-header-inner-inner-offset-y;
        }

        // When header has standalone menu and in same time don't have other sticky siblings
        // Made roll up viewport header
        &:not(:has(~ .page-main .sticky, :hover, [aria-expanded='true'])) {
            --sticky-position-top-offset: calc(var(--sticky-page-header-element-height, 0) * -1);

            transition: top 250ms ease-out;

            &.in-sticky {
                &.scroll-up {
                    top: 0;
                }
            }
        }
    }

    &-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    &__inner {
        padding-left: $page-header-inner-inner-offset-x;
        padding-right: $page-header-inner-inner-offset-x;

        & + & {
            padding-top: $page-header-inner-inner-offset-y;
        }

        &:only-child {
            padding-top: $page-header-inner-inner-offset-y;
        }

        &:last-child {
            padding-bottom: $page-header-inner-inner-offset-y;
        }

        &--hide-on-empty {
            &:not(:has(.page-header__element)) {
                display: none;
            }
        }
    }

    &__promotional-block {
        color: $page-header-promotional-link-color;
        text-decoration: none;

        &:hover {
            color: $page-header-promotional-link-color-hover;
            text-decoration: $page-header-promotional-link-text-decoration;
        }
    }

    .customer-menu {
        &__dropdown {
            max-height: 80vh;
            overflow-y: auto;
        }

        &__icon {
            align-self: center;
        }
    }
}

.topbar {
    display: flex;
    justify-content: space-between;

    &__right,
    &__left {
        display: flex;
        gap: $page-header-topbar-gap;
    }

    &__left {
        justify-content: start;
    }

    &__right {
        justify-content: end;
        margin-inline-start: auto;
    }
}

.promotional-content-container {
    display: flex;
    align-items: center;
    min-height: $page-header-promotional-content-height;
}

@include breakpoint('desktop-small') {
    .page-header {
        &__inner {
            &--no-vertical-offset {
                &:first-child {
                    padding-top: 0;
                }

                &:last-child {
                    padding-bottom: 0;
                }
            }
        }
    }
}

@include breakpoint('tablet') {
    .page-header {
        --header-inner-gaps: 24px;

        &__inner {
            padding-left: $page-header-inner-offset-inner-tablet;
            padding-right: $page-header-inner-offset-inner-tablet;

            &:has(+ .hide-on-tablet:last-of-type) {
                padding-bottom: spacing('md');
            }
        }
    }
}

@include breakpoint('mobile-big') {
    .page-header {
        --header-inner-gaps: #{spacing('md')};
    }
}

@each $key, $value in $breakpoints {
    // Generate classes for media queries for page header context
    @include breakpoint($key) {
        .page-header {
            .hide-block-on-#{$key},
            .hide-label-on-#{$key} {
                // stylelint-disable-next-line declaration-no-important
                display: none !important;
            }
        }
    }
}
