/* @theme: default; */

[data-disable-animation='1'] * {
    // stylelint-disable-next-line declaration-no-important
    transition: none !important;
}

.hidden,
.hide,
.hide-on-empty:empty,
.no-visible-children {
    &:not(.display) {
        // override inline styles
        // stylelint-disable-next-line declaration-no-important
        display: none !important;
    }
}

.invisible {
    opacity: 0;
}

.disabled {
    @include base-disabled-style();
}

.bold {
    font-weight: font-weight('bold');
}

.normal {
    font-weight: font-weight('normal');
}

.no-scroll {
    overflow: hidden;
}

.disable-touch-scrolling {
    overflow: hidden;
    visibility: hidden;
}

.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

.text-justify {
    text-align: justify;
}

.text-uppercase {
    text-transform: uppercase;
}

.text-capitalize {
    text-transform: capitalize;
}

.text-clip {
    @include ellipsis();
}

.img-fluid {
    @include img-fluid;
}

.break-all {
    word-break: break-all;
}

.no-transition {
    transition: none;
}

.shrink-zero {
    flex-shrink: 0;
}

.no-offset {
    // stylelint-disable-next-line declaration-no-important
    margin: 0 !important;
}

// Need to refactor after removal less from frontend
.hide-text {
    font: 0/0 a, sans-serif;
    text-shadow: none;
    gap: 0;
}

.list-unstyled {
    @include list-unstyled;
}

.list-style-position-inside {
    list-style-position: inside;
}

.start-scroll-from-end {
    scroll-snap-type: x mandatory;

    > :last-child {
        scroll-snap-align: start;
    }
}

.scrollable-container {
    display: grid;
    grid-auto-flow: column;
}

.invisible-scrollbar {
    &::-webkit-scrollbar {
        width: 0;
        display: none;
    }

    /* for firefox */
    scrollbar-width: none;
    /* for MS Edge */
    -ms-overflow-style: scrollbar;
}

.stretch {
    width: 100%;
}

.cover-img {
    object-fit: cover;
    object-position: center;
}

.full-cover {
    @extend %full-cover;
}

.line-through {
    text-decoration: line-through;
}

.inline-flex {
    display: inline-flex;
}

.none-pointer-events {
    pointer-events: none;
}

.rounded {
    border-radius: $border-radius;

    &-circle {
        border-radius: 50%;
    }
}

.bordered {
    border: $bordered-border;
    border-radius: $border-radius;
}

.bordered-img-on-top {
    border-bottom: $bordered-img-on-top-border-bottom;
    border-radius: $border-radius $border-radius 0 0;
}
