datagrids:
    customer-user-role-permission-grid:
        extends: role-permission-grid
        source:
            type: customer-role-permission-provider
        acl_resource: oro_customer_customer_user_role_update
        options:
            access_level_route: oro_customer_acl_access_levels

    frontend-customer-user-role-permission-grid:
        extends: role-permission-grid
        source:
            type: customer-role-frontend-permission-provider
        acl_resource: oro_customer_frontend_customer_user_role_update
        options:
            frontend: true
            access_level_route: oro_customer_frontend_acl_access_levels

    customer-user-workflow-permission-grid:
        extends: workflow-permission-grid
        source:
            type: customer-user-workflow-permission-grid-provider
        acl_resource: oro_customer_customer_user_role_update
        options:
            access_level_route: oro_customer_acl_access_levels

    customer-customers-select-grid:
        extended_entity_name: '%oro_customer.entity.customer.class%'
        acl_resource: oro_customer_customer_view
        options:
            entityHint:        customers
        inline_editing:
            enable: true
            behaviour: enable_selected
            entity_name: '%oro_customer.entity.customer.class%'
        source:
            type:         orm
            query:
                select:
                    - customer.id
                    - customer.name
                    - customer_group.name as group_name
                    - parent.name as parent_name
                    - internalRating.name as internal_rating_name
                    - internalRating.id as internal_rating_id
                from:
                    - { table: '%oro_customer.entity.customer.class%', alias: customer }
                join:
                    left:
                        - { join: customer.group, alias: customer_group }
                        - { join: customer.parent, alias: parent }
                        - { join: customer.internal_rating, alias: internalRating }
        columns:
            id:
                label: oro.customer.customer.id.label
                renderable: false
            name:
                label: oro.customer.customer.name.label
            group_name:
                label: oro.customer.customer.group.label
            parent_name:
                label: oro.customer.customer.parent.label
            internal_rating_name:
                label: oro.customer.customer.internal_rating.label
        properties:
            id: ~
        sorters:
            columns:
                name:
                    data_name: customer.name
                group_name:
                    data_name: group_name
                parent_name:
                    data_name: parent_name
                internal_rating_name:
                    data_name: internal_rating_name
            default:
                name: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_ASC'
        filters:
            columns:
                name:
                    type:      string
                    data_name: customer.name
                group_name:
                    type:      entity
                    data_name: customer_group.id
                    options:
                        field_type: Symfony\Bridge\Doctrine\Form\Type\EntityType
                        field_options:
                            class:    '%oro_customer.entity.customer_group.class%'
                            choice_label: name
                parent_name:
                    type:      string
                    data_name: parent.name
                internal_rating_name:
                    type:      enum
                    data_name: internal_rating_id
                    enum_code: acc_internal_rating

    customer-customers-context-select-grid:
        extends: customer-customers-select-grid
        inline_editing:
            enable: false

    customer-customers-grid:
        extends: customer-customers-select-grid
        source:
            query:
                select:
                    - customer.createdAt
                    - customer.updatedAt
        options:
            entity_pagination: true
        columns:
            createdAt:
                label:          oro.ui.created_at
                frontend_type:  datetime
                renderable:     false
            updatedAt:
                label:          oro.ui.updated_at
                frontend_type:  datetime
                renderable:     false
        filters:
            columns:
                createdAt:
                    type: datetime
                    data_name: customer.createdAt
                updatedAt:
                    type: datetime
                    data_name: customer.updatedAt
        sorters:
            columns:
                createdAt:
                    data_name: customer.createdAt
                updatedAt:
                    data_name: customer.updatedAt

        properties:
            view_link:
                type:   url
                route:  oro_customer_customer_view
                params: [ id ]
        actions:
            view:
                type:         navigate
                label:        oro.grid.action.view
                link:         view_link
                icon:         eye
                acl_resource: oro_customer_customer_view
                rowAction:    true

    customer-groups-select-grid:
        extended_entity_name: '%oro_customer.entity.customer_group.class%'
        acl_resource: oro_customer_customer_group_view
        options:
            entityHint:        customer groups
        source:
            type:         orm
            query:
                select:
                    - customer_group.id
                    - customer_group.name
                from:
                    - { table: '%oro_customer.entity.customer_group.class%', alias: customer_group }
        columns:
            name:
                label: oro.customer.customergroup.name.label
        properties:
            id: ~
        sorters:
            columns:
                name:
                    data_name: customer_group.name
            default:
                name: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_ASC'
        filters:
            columns:
                name:
                    type:      string
                    data_name: customer_group.name

    customer-groups-grid:
        extends: customer-groups-select-grid
        options:
            entity_pagination: true
        properties:
            view_link:
                type:   url
                route:  oro_customer_customer_group_view
                params: [ id ]
            update_link:
                type:   url
                route:  oro_customer_customer_group_update
                params: [ id ]

        actions:
            view:
                type:         navigate
                label:        oro.grid.action.view
                link:         view_link
                icon:         eye
                acl_resource: oro_customer_customer_group_view
                rowAction:    true
            update:
                type:          navigate
                label:         oro.grid.action.update
                link:          update_link
                icon:          pencil-square-o
                acl_resource:  oro_customer_customer_group_update

    customer-group-customers-grid-basic:
        acl_resource: oro_customer_customer_view
        source:
            type: orm
            query:
                select:
                    - customer.id
                    - customer.name
                    - parent.name as parent_name
                from:
                    - { table: '%oro_customer.entity.customer.class%', alias: customer }
                join:
                    left:
                        - { join: customer.parent, alias: parent }
        properties:
            id: ~
            view_link:
                type:   url
                route:  oro_customer_customer_view
                params: [ id ]
        sorters:
            columns:
                name:
                    data_name: customer.name
                parent_name:
                    data_name: parent_name
        filters:
            columns:
                name:
                    type:      string
                    data_name: customer.name
                parent_name:
                    type:      string
                    data_name: parent_name
        actions:
            view:
                type:         navigate
                label:        oro.grid.action.view
                link:         view_link
                icon:         eye
                acl_resource: oro_customer_customer_view
        options:
            entityHint: customers

    customer-group-customers-grid-view:
        extends: customer-group-customers-grid-basic
        source:
            query:
                where:
                    and:
                        - customer.group = :group
            bind_parameters:
                - group
        columns:
            name:
                label: oro.customer.customer.name.label
            parent_name:
                label: oro.customer.customer.parent.label
        sorters:
            default:
                name: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_ASC'
        actions:
            view:
                rowAction: true

    customer-group-customers-grid-update-basic:
        extends: customer-group-customers-grid-basic
        columns:
            hasGroup:
                label: oro.customer.customer.has_group.label
                editable: true
                frontend_type: boolean
            name:
                label: oro.customer.customer.name.label
            parent_name:
                label: oro.customer.customer.parent.label
        filters:
            columns:
                hasGroup:
                    type: boolean
                    data_name: hasGroup
        sorters:
            columns:
                hasGroup:
                    data_name: hasGroup
            default:
                hasGroup: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC'
        options:
            rowSelection:
                dataField: id
                columnName: hasGroup
                selectors:
                    included: '#groupAppendCustomers'
                    excluded: '#groupRemoveCustomers'

    customer-group-customers-grid-update:
        extends: customer-group-customers-grid-update-basic
        source:
            query:
                select:
                    - >
                        (CASE WHEN (:group = customer.group OR customer.id IN (:data_in)) AND customer.id NOT IN (:data_not_in)
                        THEN true ELSE false END) as hasGroup
            bind_parameters:
                -
                    name: group

    customer-group-customers-grid-create:
        extends: customer-group-customers-grid-update-basic
        source:
            query:
                select:
                    - >
                        (CASE WHEN customer.id IN (:data_in) AND customer.id NOT IN (:data_not_in)
                        THEN true ELSE false END) as hasGroup

    customer-customer-user-grid-no-filter-base:
        extended_entity_name: '%oro_customer.entity.customer_user.class%'
        acl_resource: oro_customer_customer_user_view
        options:
            entityHint:        customer users
            entity_pagination: true
        source:
            type:         orm
            query:
                select:
                    - customerUser.id
                    - customerUser.firstName
                    - customerUser.lastName
                    - customerUser.email
                    - customerUser.enabled
                    - customerUser.confirmed
                    - customerUser.isGuest
                from:
                    - { table: '%oro_customer.entity.customer_user.class%', alias: customerUser }
        columns:
            firstName:
                label: oro.customer.customeruser.first_name.label
            lastName:
                label: oro.customer.customeruser.last_name.label
            email:
                label: oro.customer.customeruser.email.label
            enabled:
                label: oro.customer.customeruser.enabled.label
                frontend_type: boolean
            confirmed:
                label: oro.customer.customeruser.confirmed.label
                frontend_type: boolean
            isGuest:
                label: oro.customer.customeruser.is_guest.label
                frontend_type: boolean
        properties:
            id: ~
            view_link:
                type:   url
                route:  oro_customer_customer_user_view
                params: [ id ]
        sorters:
            columns:
                firstName:
                    data_name: customerUser.firstName
                lastName:
                    data_name: customerUser.lastName
                email:
                    data_name: customerUser.email
                enabled:
                    data_name: customerUser.enabled
                confirmed:
                    data_name: customerUser.confirmed
                isGuest:
                    data_name: customerUser.isGuest
    customer-customer-user-grid-base:
        extends: customer-customer-user-grid-no-filter-base
        filters:
            columns:
                firstName:
                    type:      string
                    data_name: customerUser.firstName
                lastName:
                    type:      string
                    data_name: customerUser.lastName
                email:
                    type:      string
                    data_name: customerUser.email
                enabled:
                    type:      boolean
                    data_name: customerUser.enabled
                confirmed:
                    type:      boolean
                    data_name: customerUser.confirmed

    customer-customer-user-grid:
        extends: customer-customer-user-grid-no-filter-base
        source:
            query:
                select:
                    - customer.name as customerName
                join:
                    inner:
                        - { join: customerUser.customer, alias: customer }
        columns:
            id:
                label: oro.customer.customeruser.id.label
                renderable: false
                order: -2
            customerName:
                label: oro.customer.customeruser.customer.label
                order: -1
        sorters:
            columns:
                customerName:
                    data_name: customerName
        filters:
            columns:
                customerName:
                    type:      string
                    data_name: customerName
                firstName:
                    type:      string
                    data_name: customerUser.firstName
                lastName:
                    type:      string
                    data_name: customerUser.lastName
                email:
                    type:      string
                    data_name: customerUser.email
                enabled:
                    type:      boolean
                    data_name: customerUser.enabled
                confirmed:
                    type:      boolean
                    data_name: customerUser.confirmed
                isGuest:
                    type:      boolean
                    data_name: customerUser.isGuest
        actions:
            view:
                type:          navigate
                label:         oro.grid.action.view
                link:          view_link
                icon:          eye
                acl_resource:  oro_customer_customer_user_view
                rowAction:     true
        action_configuration: ['@oro_customer.datagrid.action_permission_provider', "getUserPermissions"]

    customer-user-by-customer-grid:
        extends:  customer-customer-user-grid-base
        source:
            query:
                where:
                    and:
                        - IDENTITY(customerUser.customer) = :customer_id
            bind_parameters:
                - customer_id
        actions:
            view:
                type:          navigate
                label:         oro.grid.action.view
                link:          view_link
                icon:          eye
                acl_resource:  oro_customer_customer_user_view
                rowAction:     true

    customer-customer-user-select-grid:
        extends:  customer-customer-user-grid-no-filter-base
        source:
            query:
                select:
                    - customer.name as customerName
                join:
                    inner:
                        - { join: customerUser.customer, alias: customer }
        columns:
            customerName:
                label: oro.customer.customeruser.customer.label
                order: -1
        sorters:
            columns:
                customerName:
                    data_name: customerName
        filters:
            columns:
                customerName:
                    type:      string
                    data_name: customerName
                firstName:
                    type:      string
                    data_name: customerUser.firstName
                lastName:
                    type:      string
                    data_name: customerUser.lastName
                email:
                    type:      string
                    data_name: customerUser.email
                enabled:
                    type:      boolean
                    data_name: customerUser.enabled
                confirmed:
                    type:      boolean
                    data_name: customerUser.confirmed

    basic-customer-customer-user-roles-grid:
        extended_entity_name: '%oro_customer.entity.customer_user_role.class%'
        options:
            entityHint: roles
            entity_pagination: true
        source:
            type: orm
            query:
                select:
                    - role.id
                    - role.role
                    - role.label
                    - role.selfManaged as self_managed
                    - role.public
                    - (CASE WHEN role.customer IS NOT NULL THEN false ELSE true END) as isRolePredefined
                from:
                    - { table: '%oro_customer.entity.customer_user_role.class%', alias: role }
        properties:
            id: ~
            view_link:
                type: url
                params:
                    - id
        columns:
            label:
                label: oro.customer.customeruserrole.role.label
            isRolePredefined:
                type: twig
                label: oro.customer.customeruserrole.type.label
                frontend_type: html
                data_name: isRolePredefined
                template: OroCustomerBundle:CustomerUserRole:Datagrid/Property/isRolePredifined.html.twig
        sorters:
            columns:
                label:
                    data_name: role.label
                isRolePredefined:
                    data_name: isRolePredefined
            default:
                label: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_ASC'
        filters:
            columns:
                label:
                    type: string
                    data_name: role.label
                isRolePredefined:
                    type: choice
                    data_name: CAST(isRolePredefined as int)
                    options:
                        field_options:
                            choices:
                                oro.customer.customeruserrole.type.predefined.label: 1
                                oro.customer.customeruserrole.type.customizable.label: 0
        actions:
            view:
                type:          navigate
                label:         oro.grid.action.view
                link:          view_link
                icon:          eye
                rowAction:     true

    customer-customer-user-roles-grid:
        acl_resource: oro_customer_customer_user_role_view
        extends: basic-customer-customer-user-roles-grid
        source:
            query:
                select:
                    - role_customer.name as customer_name
                join:
                    left:
                        - { join: role.customer, alias: role_customer }
                where:
                    or:
                        - role.customer IS NULL
                        - role.customer IS NOT NULL AND role_customer.name IS NOT NULL
        columns:
            customer_name:
                label: oro.customer.customeruserrole.customer.label
            self_managed:
                label: oro.customer.customeruserrole.self_managed.label
                frontend_type: boolean
                data_name: self_managed
        sorters:
            columns:
                customer_name:
                    data_name: customer_name
                self_managed:
                    data_name: self_managed
        filters:
            columns:
                customer_name:
                    type:      string
                    data_name: customer_name
                self_managed:
                    type:      boolean
                    data_name: self_managed
        properties:
            view_link:
                route: oro_customer_customer_user_role_view
        actions:
            view:
                acl_resource:  oro_customer_customer_user_role_view

    frontend-customer-customer-user-roles-grid:
        acl_resource: oro_customer_frontend_customer_user_role_index
        extends: basic-customer-customer-user-roles-grid
        source:
            skip_acl_apply: true
        properties:
            id: ~
            view_link:
                type: url
                route:  oro_customer_frontend_customer_user_role_view
                params:
                    - id
            update_link:
                type: url
                route: oro_customer_frontend_customer_user_role_update
                params:
                    - id
        actions:
            view:
                acl_resource:  oro_customer_frontend_customer_user_role_view
                type:          navigate
                label:         oro.grid.action.view
                link:          view_link
                icon:          eye
                order:         10
                rowAction:     true
            update:
                type:          navigate
                label:         oro.grid.action.update
                link:          update_link
                icon:          pencil-square-o
                order:         20
                acl_resource:  oro_customer_frontend_customer_user_role_update
        action_configuration: ['@oro_customer.datagrid.action_permission_provider', "getCustomerUserRolePermission"]
        options:
            frontend: true

    customer-customer-users-grid-update-basic:
        extends: customer-customer-users-grid-basic
        columns:
            hasRole:
                label: oro.customer.customeruser.has_role.label
                editable: true
                frontend_type: boolean
            firstName:
                label: oro.customer.customeruser.first_name.label
            lastName:
                label: oro.customer.customeruser.last_name.label
            email:
                label: oro.customer.customeruser.email.label
        filters:
            columns:
                hasRole:
                    type: boolean
                    data_name: hasRole
        sorters:
            columns:
                hasRole:
                    data_name: hasRole
            default:
                hasRole: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC'
        options:
            entityHint: users
            rowSelection:
                dataField: id
                columnName: hasRole
                selectors:
                    included: '#roleAppendUsers'
                    excluded: '#roleRemoveUsers'

    customer-customer-users-grid-basic:
        acl_resource: oro_customer_customer_user_view
        source:
            type: orm
            query:
                select:
                    - user.id
                    - user.firstName
                    - user.lastName
                    - user.email
                from:
                    - { table: '%oro_customer.entity.customer_user.class%', alias: user }
        properties:
            id: ~
        filters:
            columns:
                firstName:
                    type:      string
                    data_name: user.firstName
                lastName:
                    type:      string
                    data_name: user.lastName
                email:
                    type:      string
                    data_name: user.email
        sorters:
            columns:
                firstName:
                    data_name: user.firstName
                lastName:
                    data_name: user.lastName
                email:
                    data_name: user.email

    customer-customer-users-grid-view-basic:
        extends: customer-customer-users-grid-basic
        source:
            query:
                where:
                    and:
                        - :role MEMBER OF user.roles
            bind_parameters:
                -
                    name: role
                    default: NULL
        columns:
            firstName:
                label: oro.customer.customeruser.first_name.label
            lastName:
                label: oro.customer.customeruser.last_name.label
            email:
                label: oro.customer.customeruser.email.label

    customer-customer-users-grid-view:
        acl_resource: oro_customer_customer_user_view
        extends: customer-customer-users-grid-view-basic
        source:
            query:
                select:
                    - userCustomer.name as customerName
                join:
                    left:
                        - { join: user.customer, alias: userCustomer }
        columns:
            customerName:
                label: oro.customer.customeruser.customer.label
        filters:
            columns:
                customerName:
                    type:      string
                    data_name: customerName
        sorters:
            columns:
                customerName:
                    data_name: customerName

    frontend-customer-customer-users-grid-basic:
        entity_name: '%oro_customer.entity.customer_user.class%'
        options:
            frontend: true
            entityHint: customer users
        acl_resource: oro_customer_frontend_customer_user_view
        source:
            type: orm
            query:
                select:
                    - user.id
                    - CONCAT(user.firstName, CONCAT(' ', user.lastName)) AS fullName
                    - user.email
                    - CASE WHEN user.enabled = true AND user.confirmed = true THEN true ELSE false END AS status
                from:
                    - { table: '%oro_customer.entity.customer_user.class%', alias: user }
        sorters:
            columns:
                fullName:
                    data_name: fullName
                email:
                    data_name: user.email
                status:
                    data_name: status
        properties:
            id: ~
            view_link:
                type:   url
                route:  oro_customer_frontend_customer_user_view
                params: [ id ]
        actions:
            view:
                type:         navigate
                label:        oro.grid.action.view
                link:         view_link
                icon:         eye
                acl_resource: oro_customer_frontend_customer_user_view
                rowAction:    true

    frontend-customer-customer-users-grid-view:
        extends: frontend-customer-customer-users-grid-basic
        source:
            query:
                where:
                    and:
                        - :role MEMBER OF user.roles
            bind_parameters:
                -
                    name: role
                    default: NULL
        columns:
            fullName:
                label: oro.customer.frontend.customer_user.full_name.label
                type: twig
                frontend_type: html
                data_name: fullName
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/fullName.html.twig
            email:
                label: oro.customer.frontend.customer_user.email.label
                type: twig
                frontend_type: html
                data_name: user.email
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/email.html.twig
            status:
                label: oro.customer.frontend.customer_user.status.label
                type: twig
                frontend_type: html
                data_name: status
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/status.html.twig
        filters:
            columns:
                fullName:
                    type:      string
                    data_name: fullName
                email:
                    type:      string
                    data_name: user.email
                status:
                    type: choice
                    data_name: CAST(status as int)
                    options:
                        field_options:
                            choices:
                                oro.customer.frontend.customer_user.status_active.label: 1
                                oro.customer.frontend.customer_user.status_inactive.label: 0

    customer-customer-users-grid-update:
        acl_resource: oro_customer_customer_user_view
        extends: customer-customer-users-grid-update-basic
        source:
            query:
                select:
                    - userCustomer.name as customerName
                join:
                    left:
                        - { join: user.customer, alias: userCustomer }
        columns:
            customerName:
                label: oro.customer.customeruser.customer.label
        filters:
            columns:
                customerName:
                    type:      string
                    data_name: customerName
        sorters:
            columns:
                customerName:
                    data_name: customerName
        properties:
            update_link:
                route: oro_customer_customer_user_role_update

    frontend-customer-customer-users-grid-update:
        extends: frontend-customer-customer-users-grid-basic
        columns:
            hasRole:
                label: oro.customer.customeruser.has_role.label
                editable: true
                frontend_type: boolean
            fullName:
                label: oro.customer.frontend.customer_user.full_name.label
                type: twig
                frontend_type: html
                data_name: fullName
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/fullName.html.twig
            email:
                label: oro.customer.frontend.customer_user.email.label
                type: twig
                frontend_type: html
                data_name: user.email
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/email.html.twig
            status:
                label: oro.customer.frontend.customer_user.status.label
                type: twig
                frontend_type: html
                data_name: status
                template: OroCustomerBundle:CustomerUser:Frontend/Datagrid/status.html.twig
        filters:
            columns:
                hasRole:
                    type: boolean
                    data_name: hasRole
                fullName:
                    type:      string
                    data_name: fullName
                email:
                    type:      string
                    data_name: user.email
                status:
                    type: choice
                    data_name: CAST(status as int)
                    options:
                        field_options:
                            choices:
                                oro.customer.frontend.customer_user.status_active.label: 1
                                oro.customer.frontend.customer_user.status_inactive.label: 0
        sorters:
            columns:
                hasRole:
                    data_name: hasRole
            default:
                hasRole: '%oro_datagrid.extension.orm_sorter.class%::DIRECTION_DESC'
        options:
            entityHint: users
            rowSelection:
                dataField: id
                columnName: hasRole
                selectors:
                    included: '#roleAppendUsers'
                    excluded: '#roleRemoveUsers'

    frontend-customer-customer-user-grid:
        acl_resource: oro_customer_frontend_customer_user_view
        extends: customer-customer-user-grid-base
        source:
            query:
                where:
                    and:
                        - customerUser.isGuest = false
        columns:
            isGuest:
                renderable: false
                manageable: false
        properties:
            id: ~
            view_link:
                type:   url
                route:  oro_customer_frontend_customer_user_view
                params: [ id ]
            update_link:
                type:   url
                route:  oro_customer_frontend_customer_user_update
                params: [ id ]
        actions:
            view:
                type:          navigate
                label:         oro.grid.action.view
                link:          view_link
                icon:          eye
                acl_resource:  oro_customer_frontend_customer_user_view
                rowAction:     true
            update:
                type:          navigate
                label:         oro.grid.action.update
                link:          update_link
                icon:          pencil-square-o
                acl_resource:  oro_customer_frontend_customer_user_update
        action_configuration: ['@oro_customer.datagrid.action_permission_provider', "getUserPermissions"]
        mass_actions:
            delete:
                label: oro.customer.mass_actions.delete_customers.label
                type: delete
                icon: trash
                entity_name: Oro\Bundle\CustomerBundle\Entity\CustomerUser
                data_identifier: customerUser.id
                name: delete
                frontend_type: delete-mass
                handler: oro_customer.datagrid.extension.mass_action.handler.delete
                route: oro_datagrid_front_mass_action
                acl_resource:  oro_customer_frontend_customer_user_delete
                launcherOptions:
                    iconClassName: fa-trash-o
                    className: datagrid-massaction__dropdown-item
                defaultMessages:
                    confirm_title: oro.customer.mass_actions.delete_customers.confirm_title
                    confirm_content: oro.customer.mass_actions.delete_customers.confirm_content
                    confirm_ok: oro.customer.mass_actions.delete_customers.confirm_ok
                confirmMessages:
                    selected_message: oro.customer.mass_actions.delete_customers.confirm_content
                messages:
                    success: oro.customer.mass_actions.delete_customers.success_message
        options:
            frontend: true

    audit-grid:
        source:
            query:
                select:
                    author: |
                        CASE WHEN u.email IS NOT NULL THEN CONCAT(u.firstName, ' ', u.lastName, ' - ', u.email)
                        ELSE CONCAT(b2b_u.firstName, ' ', b2b_u.lastName, ' - ', b2b_u.email) END as author
                join:
                    left:
                        b2b_audit:
                            join: OroCustomerBundle:Audit
                            alias: b2b_a
                            conditionType: WITH
                            condition: b2b_a.id = a.id
                        b2b_user:
                            join: b2b_a.customerUser
                            alias: b2b_u

    audit-history-grid:
        source:
            query:
                select:
                    author: |
                        CASE WHEN u.email IS NOT NULL THEN CONCAT(u.firstName, ' ', u.lastName, ' - ', u.email)
                        ELSE CONCAT(b2b_u.firstName, ' ', b2b_u.lastName, ' - ', b2b_u.email) END as author
                join:
                    left:
                        b2b_audit:
                            join: OroCustomerBundle:Audit
                            alias: b2b_a
                            conditionType: WITH
                            condition: b2b_a.id = a.id
                        b2b_user:
                            join: b2b_a.customerUser
                            alias: b2b_u
                groupBy: a.id, author

# Disabled as per BAP-9497
#    frontend-audit-history-grid:
#        acl_resource: oro_customer_dataaudit_history
#        extends: audit-history-grid
#        source:
#            query:
#                select:
#                    author: |
#                        CASE WHEN u.email IS NULL THEN CONCAT(b2b_u.firstName, ' ', b2b_u.lastName, ' - ', b2b_u.email)
#                        ELSE '' END as author
#                groupBy: b2b_u.firstName, b2b_u.lastName, b2b_u.email, a.id , u.email
#        columns:
#            author:
#                label: oro.dataaudit.datagrid.author
#                type: twig
#                template: OroCustomerBundle:DataAudit:author.html.twig
#                frontend_type: html
#                data_name: author

    frontend-customer-address-grid-base:
        source:
            type: orm
            query:
                select:
                    - address
                    - address.id as id
                    - address.street as street
                    - address.city as city
                    - address.postalCode as zip
                    - address.primary as isPrimary
                    - address.label as label
                    - address.street2 as street2
                    - address.phone as phone
                    - region.name as state
                    - country.name as countryName
                join:
                    left:
                        - { join: address.country, alias: country}
                        - { join: address.region, alias: region}
            hints:
                - HINT_TRANSLATABLE
        properties:
            id: ~
        columns:
            street:
                label: oro.customer.customeraddress.entity_label
            city:
                label: oro.customer.customeraddress.city.label
            state:
                label: oro.customer.customeraddress.region.label
            zip:
                label: oro.customer.customeruseraddress.postal_code.label
            countryName:
                label: oro.customer.customeraddress.country.label
            types:
                label: oro.customer.customeraddress.types.singular_label
                type: twig
                frontend_type: html
                template: OroCustomerBundle:Address:Frontend/Datagrid/types.html.twig
        sorters:
            columns:
                street:
                    data_name: street
                city:
                    data_name: city
                state:
                    data_name: state
                zip:
                    data_name: zip
                countryName:
                    data_name: countryName
        filters:
            columns:
                street:
                    type:      string
                    data_name: street
                city:
                    type:      string
                    data_name: city
                state:
                    type:      string
                    data_name: state
                zip:
                    type:      string
                    data_name: zip
                countryName:
                    type:      string
                    data_name: countryName
        actions:
            show_map:
                label:         oro.customer.action.customer_frontend_address.map
                type:          map
                icon:          map-o
                frontend_type: frontend-map
        action_configuration: ['@oro_customer.datagrid.frontend_customer_address.action_checker', checkActions]
        mass_actions:
            delete:
                label: oro.customer.mass_actions.delete_customer_addresses.label
                type: delete
                icon: trash
                entity_name: Oro\Bundle\CustomerBundle\Entity\CustomerUserAddress
                data_identifier: address.id
                name: delete
                frontend_type: delete-mass
                route: oro_datagrid_front_mass_action
                acl_resource:  oro_customer_frontend_customer_user_address_remove
                launcherOptions:
                    iconClassName: fa-trash-o
                    className: datagrid-massaction__dropdown-item
                defaultMessages:
                    confirm_title: oro.customer.mass_actions.delete_customer_addresses.confirm_title
                    confirm_content: oro.customer.mass_actions.delete_customer_addresses.confirm_content
                    confirm_ok: oro.customer.mass_actions.delete_customer_addresses.confirm_ok
                confirmMessages:
                    selected_message: oro.customer.mass_actions.delete_customer_addresses.confirm_content
                messages:
                    success: oro.customer.mass_actions.delete_customer_addresses.success_message
        options:
            frontend: true

    frontend-customer-customer-address-grid:
        acl_resource: oro_customer_frontend_customer_address_view
        extends: frontend-customer-address-grid-base
        source:
            type: orm
            query:
                from:
                    - { table: '%oro_customer.entity.customer_address.class%', alias: address }
        properties:
            update_link:
                type: url
                route: oro_customer_frontend_customer_address_update
                params: {entityId: frontendOwner.id , id: id}

        actions:
            update:
                label:         oro.customer.action.customer_frontend_address.edit
                type:          navigate
                link:          update_link
                icon:          pencil
                acl_resource:  oro_customer_frontend_customer_address_update

    frontend-customer-customer-user-address-grid:
        acl_resource: oro_customer_frontend_customer_user_address_view
        extends: frontend-customer-address-grid-base
        source:
            type: orm
            query:
                from:
                    - { table: '%oro_customer.entity.customer_user_address.class%', alias: address }
        properties:
            update_link:
                type: url
                route: oro_customer_frontend_customer_user_address_update
                params: {entityId: frontendOwner.id , id: id}

        actions:
            update:
                label:         oro.customer.action.customer_user_frontend_address.edit
                type:          navigate
                link:          update_link
                icon:          pencil
                acl_resource:  oro_customer_frontend_customer_user_address_update
