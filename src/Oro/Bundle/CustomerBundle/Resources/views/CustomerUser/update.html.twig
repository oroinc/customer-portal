{% extends 'OroUIBundle:actions:update.html.twig' %}

{% oro_title_set({
    params : {
        "%email%": entity.email|default('N/A'|trans),
        "%entityName%": 'oro.customer.customeruser.entity_label'|trans
    }
}) %}

{% set formAction = entity.id ? path('oro_customer_customer_user_update', { 'id': entity.id }) : path('oro_customer_customer_user_create')  %}

{% block navButtons %}
    {{ parent() }}

    {{ UI.cancelButton(path('oro_customer_customer_user_index')) }}
    {% set html = UI.saveAndCloseButton() %}
    {% if entity.id or is_granted('oro_customer_customer_user_update') %}
        {% set html = html ~ UI.saveAndStayButton() %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entity.id %}
        {% set breadcrumbs = {
            'entity':      entity,
            'indexPath':   path('oro_customer_customer_user_index'),
            'indexLabel': 'oro.customer.customeruser.entity_plural_label'|trans,
            'entityTitle': entity.email|default('N/A'|trans)
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.customer.customeruser.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block stats %}
    <li>{{ 'oro.ui.created_at'|trans }}: {{ entity.createdAt ? entity.createdAt|oro_format_datetime : 'N/A' }}</li>
    <li>{{ 'oro.ui.updated_at'|trans }}: {{ entity.updatedAt ? entity.updatedAt|oro_format_datetime : 'N/A' }}</li>
    <li>{{ 'oro.customer.customeruser.last_login.label'|trans }}: {{ entity.lastLogin ? entity.lastLogin|oro_format_datetime : 'N/A' }}</li>
    <li>{{ 'oro.customer.customeruser.login_count.label'|trans }}: {{ entity.loginCount|default(0) }}</li>
{% endblock stats %}

{% block content_data %}
    {% set id = 'customer-user-edit' %}
    {% set roleWidgetAlias = 'oro_customer_customer_user_role' %}

    {% set customerFormOptions = {
        customerUserId: entity.id|default(null),
        customerFormId: '#' ~ form.customer.vars.id,
        widgetAlias: roleWidgetAlias,
    } %}

    {% set customerForm %}
        <div data-page-component-module="orocustomer/js/app/components/customer-user-component"
             data-page-component-options="{{ customerFormOptions|json_encode }}">
            {{ form_row(form.customer) }}
        </div>
    {% endset %}

    {% set formRows = [
        form_row(form.enabled),
        form_row(form.namePrefix),
        form_row(form.firstName),
        form_row(form.middleName),
        form_row(form.lastName),
        form_row(form.nameSuffix),
        form_row(form.email),
        form_row(form.birthday),
        form_widget(form.plainPassword, { 'attr': {'class': 'password'} }),
        customerForm,
        form_row(form.salesRepresentatives),
        form_row(form.isGuest),
    ] %}

    {% if form.passwordGenerate is defined %}
        {% set formRows = formRows|merge([
            form_row(form.passwordGenerate, { 'attr': {'class': 'password-trigger'} })
        ]) %}
        <span data-page-component-module="orocustomer/js/app/components/password-generate"
              data-page-component-options="{{ {checkbox: '[data-name="field__password-generate"]', passwordInput: '[data-name="field__first"]'}|json_encode }}"></span>
    {% endif %}

    {% if form.sendEmail is defined %}
        {% set formRows = formRows|merge([
            form_row(form.sendEmail)
        ]) %}
    {% endif %}

    {% set subblocks = [{
        'title': '',
        'data': formRows
    }] %}

    {% if is_granted('oro_customer_customer_user_address_update') %}
        {% set subblocks = subblocks|merge([{
            'title': 'oro.customer.sections.addresses'|trans,
            'data': [
                form_widget(form.addresses),
            ]
        }]) %}
    {% endif %}

    {% set dataBlocks = [{
            'title': 'oro.customer.sections.general'|trans,
            'class': 'active',
            'subblocks': subblocks
        }]
    %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'oro.customer.sections.additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {# Mark roles field af rendered, because it rendered by oro_widget_render #}
    {% do form.roles.setRendered %}

    {% set hasRoles = form.roles is defined %}
    {% if hasRoles %}
        {% set userRoles %}
            {% set widgetOptions = {} %}
            {% set widgetUrl = 'oro_customer_customer_user_roles' %}
            {% if entity.id %}
                {% set widgetOptions = widgetOptions|merge({customerUserId: entity.id}) %}
            {% endif %}
            {% if entity.customer and entity.customer.id %}
                {% set widgetOptions = widgetOptions|merge({customerId: entity.customer.id}) %}
            {% endif %}

            {% if form.roles.vars.errors|length %}
                {% set widgetOptions = widgetOptions|merge({ error: (form.roles.vars.errors|first).message }) %}
            {% endif %}

            {{ oro_widget_render({
                'widgetType': 'block',
                'url': path(widgetUrl, widgetOptions),
                'alias': roleWidgetAlias
            }) }}
        {% endset %}

        {% set title = 'oro.customer.customeruser.roles.label'|trans %}

        {% set dataBlocks = dataBlocks|merge( [{
            'title': title,
            'subblocks': [
                {
                    'title': '',
                    'data': [userRoles]
                }
            ]
        }] ) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form),
        'dataBlocks': dataBlocks
    }%}

    <div class="responsive-form-inner">
        {{ parent() }}
    </div>
{% endblock content_data %}
