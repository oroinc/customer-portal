{% extends '@OroNavigation/Menu/menu_base.html.twig' %}
{% import '@OroUI/macros.html.twig' as UI %}
{% import '@OroNavigation/macros.html.twig' as Navigation %}
{% import '@OroCommerceMenu/layouts/default/menu.html.twig' as menuMacros %}

{% macro attributes(attributes) %}
    {%- for name, value in attributes -%}
        {%- if value is not none and value is not same as(false) -%}
            {{- ' %s="%s"'|format(name, value is same as(true) ? name|e : value|e)|raw -}}
        {%- endif -%}
    {%- endfor -%}
{% endmacro %}

{% macro add_attribute_values(attributes, attribute, values) %}
    {%- set _values = attributes[attribute] is defined ? attributes[attribute]|split(' ') : [] %}
    {%- set _values = _values|merge(values) %}
    {{- _values|join(' ') -}}
{% endmacro %}

{% block menu_widget %}
    {% set options ={
        depth: depth,
        matchingDepth: matchingDepth,
        currentAsLink: currentAsLink,
        ancestorClass: ancestorClass,
        currentClass: currentClass,
        firstClass: firstClass,
        lastClass: lastClass,
        allow_safe_labels: allow_safe_labels,
        clear_matcher: clear_matcher,
        leaf_class: leaf_class,
        branch_class: branch_class,
        customItemBlock: customItemBlock
    } %}

    {% set listAttributes = item.childrenAttributes|merge(attr) %}

    {% if options.rootClass is defined %}
        {% set listAttributes = listAttributes|merge({'class': menuMacros.add_attribute_values(listAttributes, 'class', [options.rootClass])}) %}
    {% endif %}
    {{ block('list') -}}
{% endblock %}

{% block list %}
    {% import _self as oro_menu %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        <ul{{ oro_menu.attributes(listAttributes) }}>
            {{ block('children') }}
        </ul>
    {% endif %}
{% endblock %}

{% block children %}
    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = currentOptions|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}
    {% for item in currentItem.children %}
        {%- set itemAttributes = item.attributes|merge(child_attr) %}
        {%- set childrenAttributes = item.childrenAttributes %}
        {%- set classes = (item.attributes.class|default('')~' '~child_attr.class|default(''))|split(' ') %}
        {%- set childrenClasses = childrenAttributes.class is defined ? childrenAttributes.class|split(' ') : [] %}
        {% if currentOptions.customItemBlock %}
            {{ block(currentOptions.customItemBlock) }}
        {% else %}
            {{ block('item') }}
        {% endif %}
    {% endfor %}
    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{% block item %}
    {{ block('item_renderer') }}
{% endblock %}

{% block item_renderer %}
    {% if item.displayed and item.extras.isAllowed %}
        {# building the class of the item #}
        {%- if oro_commercemenu_is_current(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif oro_commercemenu_is_ancestor(item, options.depth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}
        {%- if classes is not empty %}
            {%- set itemAttributes = itemAttributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}

        {% import _self as oro_menu %}
        <li{{ oro_menu.attributes(itemAttributes) }}>
            {{ block('item_content') }}
        </li>
    {% endif %}
{% endblock %}

{% block item_content %}
    {%- set linkAttributes = item.linkAttributes|merge(link_attr) %}
    {%- set labelAttributes = item.labelAttributes|merge(label_attr) %}
    {%- if item.uri is not empty and (not oro_commercemenu_is_current(item) or options.currentAsLink) %}
        {{ block('linkElement') }}
    {%- else %}
        {{ block('spanElement') }}
    {%- endif %}
    {# render the list of children#}
    {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
    {%- set listAttributes = childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
    {{ block('list_wrapper') }}
{% endblock %}

{# list wrapper block is used to allow modification of execution context in child templates #}
{% block list_wrapper %}
    {{ block('list') }}
{% endblock %}

{% block linkElement %}
    {% import _self as oro_menu %}
    {% set extras = item.extras %}

    {% if extras.dialog is defined and extras.dialog %}
        {{ Navigation.renderClientLink(extras.dialog_config, {
            entityClass: oro_class_name(app.user, true),
            entityId: app.user.id
        }) }}
    {%- else %}
        <a href="{{ oro_commercemenu_get_url(item.uri) }}"{{ oro_menu.attributes(linkAttributes) }}>{{ block('label') }}</a>
    {% endif %}

{% endblock %}

{% block spanElement %}
    {% import _self as oro_menu %}
    <span{{ oro_menu.attributes(labelAttributes) }} {{ oro_menu.attributes(linkAttributes) }}>{{ block('label') }}</span>
{% endblock %}

{% block label %}
    {%- set label = item.extras.custom is defined and item.extras.custom == true ? item.label : item.label|trans -%}
    {%- if options.allow_safe_labels and item.getExtra('safe_label', false) -%}
        {{- label|oro_html_sanitize -}}
    {% else %}
        {{- label -}}
    {%- endif -%}
{% endblock %}
